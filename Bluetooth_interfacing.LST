ARM COMPILER V2.40a,  Bluetooth_interfacing                                                07/09/23  06:46:06  PAGE 1   


ARM COMPILER V2.40a, COMPILATION OF MODULE Bluetooth_interfacing
OBJECT MODULE PLACED IN Bluetooth_interfacing.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe Bluetooth_interfacing.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          /*
    2            HC-05 bluetooth interfacing with LPC2148(ARM7)
    3            http://www.electronicwings.com/arm7/hc-05-bluetooth-module-interfacing-with-lpc2148
    4          */
    5          
    6          #include <lpc214x.h>
    7          
    8          
    9          void delay_ms(unsigned int j)
   10          {
   11   1          unsigned int x,i;
   12   1          for(i=0;i<j;i++)
   13   1          {
   14   2          for(x=0; x<6000; x++);    /* loop to generate 1 milisecond delay with Cclk = 60MHz */
   15   2          }
   16   1      }
   17          
   18          void UART0_init(void)
   19          {
   20   1          PINSEL0 = PINSEL0 | 0x00000005; /* Enable UART0 Rx0 and Tx0 pins of UART0 */
   21   1          U0LCR = 0x83;   /* DLAB = 1, 1 stop bit, 8-bit character length */
   22   1          U0DLM = 0x00;   /* For baud rate of 9600 with Pclk = 15MHz */
   23   1          U0DLL = 0x61;   /* We get these values of U0DLL and U0DLM from formula */
   24   1          U0LCR = 0x03; /* DLAB = 0 */
   25   1      }
   26          
   27          void UART0_TxChar(char ch) /* A function to send a byte on UART0 */
   28          {
   29   1          U0THR = ch;
   30   1          while( (U0LSR & 0x40) == 0 );   /* Wait till THRE bit becomes 1 which tells that transmission is completed
             - */
   31   1      }
   32          
   33          void UART0_SendString(char* str) /* A function to send string on UART0 */
   34          {
   35   1          unsigned int i = 0;
   36   1          while( str[i] != '\0' )
   37   1          {
   38   2              UART0_TxChar(str[i]);
   39   2              i++;
   40   2          }
   41   1      }
   42          
   43          unsigned char UART0_RxChar(void) /* A function to receive a byte on UART0 */
   44          {
   45   1          while( (U0LSR & 0x01) == 0);    /* Wait till RDR bit becomes 1 which tells that receiver contains valid dat
             -a */
   46   1              return U0RBR;
   47   1      }
   48          
   49          int main (void)
   50          {
   51   1          char data_in;
   52   1          UART0_init();
   53   1          IO0DIR = IO0DIR | 0x00000010;   /* Configure P0.4 as output */
   54   1          while(1)
   55   1          {
   56   2              data_in = UART0_RxChar();   /* Receive data from bluetooth */
   57   2              if ( data_in == '1' )   /* If data received is 1 */
ARM COMPILER V2.40a,  Bluetooth_interfacing                                                07/09/23  06:46:06  PAGE 2   

   58   2              {
   59   3                  IO0PIN = ( IO0PIN | 0x00000010 );
   60   3                  UART0_SendString("LED ON\n");
   61   3              }
   62   2              else if ( data_in == '0' )  /* If data received is 0 */
   63   2              {
   64   3                  IO0PIN = ( IO0PIN & 0xFFFFFFEF );
   65   3                  UART0_SendString("LED OFF\n");
   66   3              }
   67   2              else
   68   2                  UART0_SendString("Select Proper Option\n");
   69   2          }
   70   1      }
ARM COMPILER V2.40a,  Bluetooth_interfacing                                                07/09/23  06:46:06  PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         delay_ms?T
 PUBLIC         UART0_init?T
 PUBLIC         UART0_TxChar?T
 PUBLIC         UART0_SendString?T
 PUBLIC         UART0_RxChar?T
 PUBLIC         main



*** DATA SEGMENT '?CON?Bluetooth_interfacing':
 00000000          ??S_3:
 00000000            DB          'Select Proper Option',0x0A,0x00
 00000016          ??S_2:
 00000016            DB          'LED OFF',0x0A,0x00
 0000001F          ??S_1:
 0000001F            DB          'LED ON',0x0A,0x00

*** CODE SEGMENT '?PR?delay_ms?T?Bluetooth_interfacing':
    9: void delay_ms(unsigned int j)
 00000000  B410      PUSH        {R4}
 00000002  ---- Variable 'j' assigned to Register 'R0' ----
   10: {
 00000002            ; SCOPE-START
   12:     for(i=0;i<j;i++)
 00000002  2100      MOV         R1,#0x0
 00000004  ---- Variable 'i' assigned to Register 'R1' ----
 00000004  E006      B           L_3  ; T=0x00000014
   14:     for(x=0; x<6000; x++);    /* loop to generate 1 milisecond delay with Cclk = 60MHz */
 00000006          L_10:
 00000006  2200      MOV         R2,#0x0
 00000008  ---- Variable 'x' assigned to Register 'R2' ----
 00000008          L_6:
 00000008  3201      ADD         R2,#0x1
 0000000A  1C13      MOV         R3,R2 ; x
 0000000C  4800      LDR         R4,=0x1770
 0000000E  42A3      CMP         R3,R4 ; x
 00000010  D3FA      BCC         L_6  ; T=0x00000008
   15:     }
 00000012  3101      ADD         R1,#0x1
 00000014          L_3:
 00000014  1C03      MOV         R3,R0 ; j
 00000016  1C0A      MOV         R2,R1 ; i
 00000018  429A      CMP         R2,R3 ; i
 0000001A  D3F4      BCC         L_10  ; T=0x00000006
 0000001C            ; SCOPE-END
   16: }
 0000001C  BC10      POP         {R4}
 0000001E  4770      BX          R14
 00000020          ENDP ; 'delay_ms?T'


*** CODE SEGMENT '?PR?UART0_init?T?Bluetooth_interfacing':
   20:     PINSEL0 = PINSEL0 | 0x00000005; /* Enable UART0 Rx0 and Tx0 pins of UART0 */
 00000000  4800      LDR         R0,=0xE002C000
 00000002  6801      LDR         R1,[R0,#0x0]
 00000004  2005      MOV         R0,#0x5
 00000006  4301      ORR         R1,R0
 00000008  4800      LDR         R0,=0xE002C000
 0000000A  6001      STR         R1,[R0,#0x0]
   21:     U0LCR = 0x83;   /* DLAB = 1, 1 stop bit, 8-bit character length */
 0000000C  2183      MOV         R1,#0x83
 0000000E  4800      LDR         R0,=0xE000C00C
 00000010  7001      STRB        R1,[R0,#0x0]
   22:     U0DLM = 0x00;   /* For baud rate of 9600 with Pclk = 15MHz */
ARM COMPILER V2.40a,  Bluetooth_interfacing                                                07/09/23  06:46:06  PAGE 4   

 00000012  2100      MOV         R1,#0x0
 00000014  4800      LDR         R0,=0xE000C004
 00000016  7001      STRB        R1,[R0,#0x0]
   23:     U0DLL = 0x61;   /* We get these values of U0DLL and U0DLM from formula */
 00000018  2161      MOV         R1,#0x61
 0000001A  4800      LDR         R0,=0xE000C000
 0000001C  7001      STRB        R1,[R0,#0x0]
   24:     U0LCR = 0x03; /* DLAB = 0 */
 0000001E  2103      MOV         R1,#0x3
 00000020  4800      LDR         R0,=0xE000C00C
 00000022  7001      STRB        R1,[R0,#0x0]
   25: }
 00000024  4770      BX          R14
 00000026          ENDP ; 'UART0_init?T'


*** CODE SEGMENT '?PR?UART0_TxChar?T?Bluetooth_interfacing':
   27: void UART0_TxChar(char ch) /* A function to send a byte on UART0 */
 00000000  1C02      MOV         R2,R0 ; ch
 00000002  ---- Variable 'ch' assigned to Register 'R2' ----
   29:     U0THR = ch;
 00000002  1C11      MOV         R1,R2 ; ch
 00000004  4800      LDR         R0,=0xE000C000
 00000006  7001      STRB        R1,[R0,#0x0]
   30:     while( (U0LSR & 0x40) == 0 );   /* Wait till THRE bit becomes 1 which tells that transmission is completed */
 00000008          L_11:
 00000008  4800      LDR         R0,=0xE000C014
 0000000A  7800      LDRB        R0,[R0,#0x0]
 0000000C  2140      MOV         R1,#0x40
 0000000E  4208      TST         R0,R1
 00000010  D0FA      BEQ         L_11  ; T=0x00000008
   31: }
 00000012  4770      BX          R14
 00000014          ENDP ; 'UART0_TxChar?T'


*** CODE SEGMENT '?PR?UART0_SendString?T?Bluetooth_interfacing':
   33: void UART0_SendString(char* str) /* A function to send string on UART0 */
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; str
 00000004  ---- Variable 'str' assigned to Register 'R4' ----
   34: {
 00000004            ; SCOPE-START
   35:     unsigned int i = 0;
 00000004  2300      MOV         R3,#0x0
 00000006  ---- Variable 'i' assigned to Register 'R3' ----
   36:     while( str[i] != '\0' )
 00000006  E005      B           L_15  ; T=0x00000014
 00000008          L_17:
   38:         UART0_TxChar(str[i]);
 00000008  1C19      MOV         R1,R3 ; i
 0000000A  1C20      MOV         R0,R4 ; str
 0000000C  5C40      LDRB        R0,[R0,R1]
 0000000E  F7FF      BL          UART0_TxChar?T  ; T=0x0001  (1)
 00000010  FFF7      BL          UART0_TxChar?T  ; T=0x0001  (2)
   39:         i++;
 00000012  3301      ADD         R3,#0x1
   40:     }
 00000014          L_15:
 00000014  1C19      MOV         R1,R3 ; i
 00000016  1C20      MOV         R0,R4 ; str
 00000018  5C40      LDRB        R0,[R0,R1]
 0000001A  2800      CMP         R0,#0x0
 0000001C  D1F4      BNE         L_17  ; T=0x00000008
 0000001E            ; SCOPE-END
   41: }
 0000001E  BC10      POP         {R4}
 00000020  BC08      POP         {R3}
 00000022  4718      BX          R3
 00000024          ENDP ; 'UART0_SendString?T'

ARM COMPILER V2.40a,  Bluetooth_interfacing                                                07/09/23  06:46:06  PAGE 5   


*** CODE SEGMENT '?PR?UART0_RxChar?T?Bluetooth_interfacing':
   45:     while( (U0LSR & 0x01) == 0);    /* Wait till RDR bit becomes 1 which tells that receiver contains valid data */
 00000000          L_19:
 00000000  4800      LDR         R0,=0xE000C014
 00000002  7800      LDRB        R0,[R0,#0x0]
 00000004  2101      MOV         R1,#0x1
 00000006  4208      TST         R0,R1
 00000008  D0FA      BEQ         L_19  ; T=0x00000000
   46:         return U0RBR;
 0000000A  4800      LDR         R0,=0xE000C000
 0000000C  7800      LDRB        R0,[R0,#0x0]
   47: }
 0000000E  4770      BX          R14
 00000010          ENDP ; 'UART0_RxChar?T'


*** CODE SEGMENT '?PR?main?Bluetooth_interfacing':
   49: int main (void)
 00000000  B500      PUSH        {LR}
   50: {
 00000002            ; SCOPE-START
   52:     UART0_init();
 00000002  F7FF      BL          UART0_init?T  ; T=0x0001  (1)
 00000004  FFFD      BL          UART0_init?T  ; T=0x0001  (2)
   53:     IO0DIR = IO0DIR | 0x00000010;   /* Configure P0.4 as output */
 00000006  4800      LDR         R0,=0xE0028008
 00000008  6801      LDR         R1,[R0,#0x0]
 0000000A  2010      MOV         R0,#0x10
 0000000C  4301      ORR         R1,R0
 0000000E  4800      LDR         R0,=0xE0028008
 00000010  6001      STR         R1,[R0,#0x0]
   54:     while(1)
 00000012          L_26:
   56:         data_in = UART0_RxChar();   /* Receive data from bluetooth */
 00000012  F7FF      BL          UART0_RxChar?T  ; T=0x0001  (1)
 00000014  FFF5      BL          UART0_RxChar?T  ; T=0x0001  (2)
 00000016  1C04      MOV         R4,R0 ; data_in
 00000018  ---- Variable 'data_in' assigned to Register 'R4' ----
   57:         if ( data_in == '1' )   /* If data received is 1 */
 00000018  1C20      MOV         R0,R4 ; data_in
 0000001A  0600      LSL         R0,R0,#0x18 ; data_in
 0000001C  0E00      LSR         R0,R0,#0x18
 0000001E  2831      CMP         R0,#0x31
 00000020  D109      BNE         L_28  ; T=0x00000036
   59:             IO0PIN = ( IO0PIN | 0x00000010 );
 00000022  4800      LDR         R0,=0xE0028000
 00000024  6801      LDR         R1,[R0,#0x0]
 00000026  2010      MOV         R0,#0x10
 00000028  4301      ORR         R1,R0
 0000002A  4800      LDR         R0,=0xE0028000
 0000002C  6001      STR         R1,[R0,#0x0]
   60:             UART0_SendString("LED ON\n");
 0000002E  4800      LDR         R0,=??S_1 ; ??S_1
 00000030  F7FF      BL          UART0_SendString?T  ; T=0x0001  (1)
 00000032  FFE6      BL          UART0_SendString?T  ; T=0x0001  (2)
   61:         }
 00000034  E7ED      B           L_26  ; T=0x00000012
 00000036          L_28:
   62:         else if ( data_in == '0' )  /* If data received is 0 */
 00000036  1C20      MOV         R0,R4 ; data_in
 00000038  0600      LSL         R0,R0,#0x18 ; data_in
 0000003A  0E00      LSR         R0,R0,#0x18
 0000003C  2830      CMP         R0,#0x30
 0000003E  D109      BNE         L_30  ; T=0x00000054
   64:             IO0PIN = ( IO0PIN & 0xFFFFFFEF );
 00000040  4800      LDR         R0,=0xE0028000
 00000042  6801      LDR         R1,[R0,#0x0]
 00000044  2010      MOV         R0,#0x10
ARM COMPILER V2.40a,  Bluetooth_interfacing                                                07/09/23  06:46:06  PAGE 6   

 00000046  4381      BIC         R1,R0
 00000048  4800      LDR         R0,=0xE0028000
 0000004A  6001      STR         R1,[R0,#0x0]
   65:             UART0_SendString("LED OFF\n");
 0000004C  4800      LDR         R0,=??S_2 ; ??S_2
 0000004E  F7FF      BL          UART0_SendString?T  ; T=0x0001  (1)
 00000050  FFD7      BL          UART0_SendString?T  ; T=0x0001  (2)
   66:         }
 00000052  E7DE      B           L_26  ; T=0x00000012
 00000054          L_30:
   68:             UART0_SendString("Select Proper Option\n");
 00000054  4800      LDR         R0,=??S_3 ; ??S_3
 00000056  F7FF      BL          UART0_SendString?T  ; T=0x0001  (1)
 00000058  FFD3      BL          UART0_SendString?T  ; T=0x0001  (2)
   69:     }
 0000005A  E7DA      B           L_26  ; T=0x00000012
 0000005C            ; SCOPE-END
 0000005C  BC08      POP         {R3}
 0000005E  4718      BX          R3
 00000060          ENDP ; 'main'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =        39
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
